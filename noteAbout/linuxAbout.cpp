//
// Created by 87572 on 19/4/20.
//


/**
*K1:======================================================================
* 编译的四个阶段
* 编译命令的大小写不能错.阶段可以跳过,并不需要依次执行.
* gcc多文件编程的时候,不需要把.h 文件加入,但是.h 必须在对应的目录下.
*
*/

/**
 * 多个.c文件的时候,无法-o 指定目标.
 *
 * 预处理：gcc -E hello.c -o hello.i
 *         1.宏文件展开  2.替换宏  3.去掉注释  4.宏判断
 * 编  译：gcc -S hello.i -o hello.s
 * 汇  编：gcc -c hello.s -o hello.o
 * 链  接：gcc    hello.o -o hello_elf
 *
 *
 * 这几步并不是一定依次执行可以直接将.c  文件替换中间文件!
*/



/**
*K2:======================================================================
* 多文件编程
* gcc多文件编程的时候,不需要把.h 文件加入,但是.h 必须在对应的目录下.
*/


/**
*K3:======================================================================
* 配置PATH,执行./  可执行命令,则可以直接执行.
 * 修改用户配置文件
 * 第一步，回到用户的主目录,在哪个用户主目录下修改配置文件，影响只是这个用户，其他都没有关系，
 *          即使是root修改主目录下的配置文件，影响的也只是root，其他用户没有变化
 *
 *
 * 第二步，打开用户配置文件
 *      redhat  vi .bash_profile
 *      ubuntu   vi .profile
 *      unix  vi .profile
 *
 * 在PATH中所有的路径用冒号分割（windows是用分号分割）
 * PATH=$PATH:.
 * 保存退出
 * 第三步，让修改生效
 *      redhat . .bash_profile
 *      ubuntu . .profile
 *
 *=============================================================================
 * 全局修改配置
 * 第一步
 *      切换到root用户
 *
 * 第二步
 *      进入根目录 下的etc目录
 *
 * 第三步
 *      打开profile文件，添加
 *      PATH=$PATH:.
 *      export PATH保存退出
 *
 * =====================================================================================
 * 配置动态链接库  ,在执行main.out的时候,必须修改这个路径否则无法执行.因为不在当前目录下寻找.so
 *
 * PATH=$PATH:$HOME/bin:.
 *
 * export PATH
 *
 * export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:.
 *
 */


/**
 * K4:生成动态库  .so
 *
 *
 */


/**
 * K5:链接动态库  .so
 *
 *
 */


